// <auto-generated />
using System;
using ISPMediaAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISPMediaAPI.Migrations
{
    [DbContext(typeof(ISPMediaDbContext))]
    [Migration("20250706103330_actualização da tabela musica")]
    partial class actualizaçãodatabelamusica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISPMediaAPI.Models.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistas");

                    b.HasDiscriminator().HasValue("Artista");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Banda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Fim")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Inicio")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bandas");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoMedia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoMedia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Medias");

                    b.HasDiscriminator().HasValue("Media");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Produtora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produtoras");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Utilizador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Autor", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.Property<Guid>("BandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoraId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("BandaId");

                    b.HasIndex("ProdutoraId");

                    b.HasDiscriminator().HasValue("Autor");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Compositor", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.Property<Guid?>("TipoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TipoGeneroId");

                    b.HasDiscriminator().HasValue("Compositor");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Participacao", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.Property<Guid?>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MediaId");

                    b.HasDiscriminator().HasValue("Participacao");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Musica", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Media");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Letra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("AlbumId");

                    b.HasIndex("TipoGeneroId");

                    b.HasDiscriminator().HasValue("Musica");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Video", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Media");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Media", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Autor", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Banda", "Banda")
                        .WithMany()
                        .HasForeignKey("BandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISPMediaAPI.Models.Produtora", "Produtora")
                        .WithMany()
                        .HasForeignKey("ProdutoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banda");

                    b.Navigation("Produtora");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Compositor", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Musica", null)
                        .WithMany("Compositores")
                        .HasForeignKey("TipoGeneroId");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Participacao", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Media", null)
                        .WithMany("Participacoes")
                        .HasForeignKey("MediaId");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Musica", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Album", null)
                        .WithMany("Musicas")
                        .HasForeignKey("AlbumId");

                    b.HasOne("ISPMediaAPI.Models.Genero", "TipoGenero")
                        .WithMany()
                        .HasForeignKey("TipoGeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGenero");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Album", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Media", b =>
                {
                    b.Navigation("Participacoes");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Musica", b =>
                {
                    b.Navigation("Compositores");
                });
#pragma warning restore 612, 618
        }
    }
}
