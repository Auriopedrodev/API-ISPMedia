// <auto-generated />
using System;
using ISPMediaAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISPMediaAPI.Migrations
{
    [DbContext(typeof(ISPMediaDbContext))]
    partial class ISPMediaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISPMediaAPI.Models.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("Artistas");

                    b.HasDiscriminator().HasValue("Artista");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Banda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biografia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateOnly?>("Fim")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Inicio")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("Bandas");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Capa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("DataLancamento")
                        .HasColumnType("date");

                    b.Property<string>("FichaTecnica")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TipoLancamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoMedia")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoMedia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Medias");

                    b.HasDiscriminator().HasValue("Media");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Produtora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("Produtoras");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Utilizador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("MediaParticipacao", b =>
                {
                    b.Property<Guid>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MediaId", "ParticipacaoId");

                    b.HasIndex("ParticipacaoId");

                    b.ToTable("MediaParticipacao");
                });

            modelBuilder.Entity("MusicaCompositor", b =>
                {
                    b.Property<Guid>("CompositorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MusicaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CompositorId", "MusicaId");

                    b.HasIndex("MusicaId");

                    b.ToTable("MusicaCompositor");
                });

            modelBuilder.Entity("PlaylistMedia", b =>
                {
                    b.Property<Guid>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MediaId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistMedia");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Autor", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.Property<Guid>("BandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoraId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("BandaId");

                    b.HasIndex("ProdutoraId");

                    b.HasDiscriminator().HasValue("Autor");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Compositor", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.HasDiscriminator().HasValue("Compositor");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Participacao", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Artista");

                    b.HasDiscriminator().HasValue("Participacao");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Musica", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Media");

                    b.Property<Guid?>("LancamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Letra")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("LancamentoId");

                    b.HasIndex("TipoGeneroId");

                    b.HasDiscriminator().HasValue("Musica");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Video", b =>
                {
                    b.HasBaseType("ISPMediaAPI.Models.Media");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Formato")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Resolucao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Media", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("MediaParticipacao", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ISPMediaAPI.Models.Participacao", null)
                        .WithMany()
                        .HasForeignKey("ParticipacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicaCompositor", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Compositor", null)
                        .WithMany()
                        .HasForeignKey("CompositorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ISPMediaAPI.Models.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaylistMedia", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ISPMediaAPI.Models.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Autor", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Banda", "Banda")
                        .WithMany()
                        .HasForeignKey("BandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISPMediaAPI.Models.Produtora", "Produtora")
                        .WithMany("Autores")
                        .HasForeignKey("ProdutoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Banda");

                    b.Navigation("Produtora");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Musica", b =>
                {
                    b.HasOne("ISPMediaAPI.Models.Lancamento", "Lancamento")
                        .WithMany("Musicas")
                        .HasForeignKey("LancamentoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ISPMediaAPI.Models.Genero", "TipoGenero")
                        .WithMany("Musicas")
                        .HasForeignKey("TipoGeneroId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Lancamento");

                    b.Navigation("TipoGenero");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Genero", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Lancamento", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("ISPMediaAPI.Models.Produtora", b =>
                {
                    b.Navigation("Autores");
                });
#pragma warning restore 612, 618
        }
    }
}
